sudo: required
dist: trusty
language: c

matrix:
  include:

    #
    # GCC 7 Build
    #
    - compiler: gcc-7

      os: linux

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7

      env:
        - TEST="GCC Build"
        - COMPILER=gcc-7

      script:
        - cmake -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release ..
        - make -j 4
        - ctest -j 4

    #
    # CLang 4.0 Build
    #
    - compiler: clang-4.0

      os: linux

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-7
            - g++-7
            - clang-4.0

      env:
        - TEST="CLang Build"
        - COMPILER=clang-4.0

      script:
        - cmake -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release ..
        - make -j 4
        - ctest -j 4

    #
    # MUSL Build
    #
    - compiler: musl-gcc

      os: linux

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - musl-tools
            - musl-dev

      env:
        - TEST="MUSL Build"
        - COMPILER=musl-gcc

      script:
        - cmake -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release ..
        - make -j 4
        - ctest -j 4

    #
    # CppCheck Build
    #
    - compiler: gcc-7

      os: linux

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7

      env:
        - TEST="CppCheck Build"
        - COMPILER=gcc-7

      script:
        - cmake -DENABLE_CPPCHECK=ON -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release ..
        - make -j 4
        - make -j 4 check
        - ctest -j 4

    #
    # Git Diff Build
    #
    - os: linux
      env:
        - TEST="Git Diff Build"
      script:
        - |
            if [[ -n $(git diff --check HEAD^) ]]; then
              echo "You must remove whitespace before submitting a pull request"
              echo ""
              git diff --check HEAD^
              exit -1
            fi

    #
    # Codecov Build
    #
    - compiler: gcc-7
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7

      env:
        - TEST="Code Coverage Build"
        - COMPILER=gcc-7
        - CMAKE_C_FLAGS_DEBUG="-std=c11 -Wall -Wextra -Wpedantic -Wchkp -Wuninitialized -Winit-self --coverage -O0"
        - CMAKE_EXE_LINKER_FLAGS=-lgcov
        - CC_TEST_REPORTER_ID=709c190d97a1ec5988862a2a5b08a8ee3ad5f2798f488915f18c1c9c36fedbf5

      before_script:
        # Build Folder
        - mkdir build
        - cd build

        # Update / Install CMake
        - |
          if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
            mkdir -p external/cmake
            pushd external/cmake
            wget https://cmake.org/files/v3.9/cmake-3.9.6-Linux-x86_64.sh
            chmod +x cmake-*-Linux-x86_64.sh
            ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
            export PATH="${PWD}/bin:$PATH"
            popd
          else
            if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
          fi
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build

      script:
        - cmake -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS_DEBUG="$CMAKE_C_FLAGS_DEBUG" -DCMAKE_EXE_LINKER_FLAGS=$CMAKE_EXE_LINKER_FLAGS ..
        - make -j 4
        - ctest -j 4
        - cmake --build . --target ContinuousCoverage

      after_success:
        - bash <(curl -s https://codecov.io/bash) -f '!*unity*' -F unittesting
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    #
    # Valgrind Build
    #
    - compiler: gcc-7

      os: linux

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - valgrind

      env:
        - TEST="Valgrind Build"
        - COMPILER=gcc-7

      script:
        - cmake -DENABLE_MEMCHECK=ON -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release ..
        - make -j 4
        - ctest -T memcheck

    #
    # Astyle Build
    #
    - compiler: gcc-7

      os: linux

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7

      env:
        - TEST="Astyle Build"
        - COMPILER=gcc-7

      script:
        - cmake -DENABLE_ASTYLE=ON -DCMAKE_C_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release ..
        - make -j 4
        - make format
        - |
          if [[ -n $(git diff) ]]; then
            echo "You must run `make format` before submitting a pull request"
            echo ""
            git diff
            exit -1
          fi

before_install:
  - sudo apt-get update -qq
  - echo "End before install"

before_script:
  # Build Folder
  - mkdir build
  - cd build

  # Update / Install CMake
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.9/cmake-3.9.6-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi
